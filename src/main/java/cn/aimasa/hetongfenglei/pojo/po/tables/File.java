/*
 * This file is generated by jOOQ.
 */
package cn.aimasa.hetongfenglei.pojo.po.tables;


import cn.aimasa.hetongfenglei.pojo.po.ClassfiyContact;
import cn.aimasa.hetongfenglei.pojo.po.Keys;
import cn.aimasa.hetongfenglei.pojo.po.tables.records.FileRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class File extends TableImpl<FileRecord> {

    private static final long serialVersionUID = 560470461;

    /**
     * The reference instance of <code>classfiy_contact.file</code>
     */
    public static final File FILE = new File();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FileRecord> getRecordType() {
        return FileRecord.class;
    }

    /**
     * The column <code>classfiy_contact.file.id</code>. 文件id
     */
    public final TableField<FileRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "文件id");

    /**
     * The column <code>classfiy_contact.file.userid</code>. 上传文件者id
     */
    public final TableField<FileRecord, Integer> USERID = createField(DSL.name("userid"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "上传文件者id");

    /**
     * The column <code>classfiy_contact.file.content</code>. 二进制文件
     */
    public final TableField<FileRecord, byte[]> CONTENT = createField(DSL.name("content"), org.jooq.impl.SQLDataType.BLOB.nullable(false), this, "二进制文件");

    /**
     * The column <code>classfiy_contact.file.classfiy_field</code>. 文件类别
0 - 租赁合同
1 -  买卖合同
2 - 劳动合同
     */
    public final TableField<FileRecord, String> CLASSFIY_FIELD = createField(DSL.name("classfiy_field"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "文件类别\r\n0 - 租赁合同\r\n1 -  买卖合同\r\n2 - 劳动合同");

    /**
     * The column <code>classfiy_contact.file.filename</code>. 文件名字
     */
    public final TableField<FileRecord, String> FILENAME = createField(DSL.name("filename"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "文件名字");

    /**
     * Create a <code>classfiy_contact.file</code> table reference
     */
    public File() {
        this(DSL.name("file"), null);
    }

    /**
     * Create an aliased <code>classfiy_contact.file</code> table reference
     */
    public File(String alias) {
        this(DSL.name(alias), FILE);
    }

    /**
     * Create an aliased <code>classfiy_contact.file</code> table reference
     */
    public File(Name alias) {
        this(alias, FILE);
    }

    private File(Name alias, Table<FileRecord> aliased) {
        this(alias, aliased, null);
    }

    private File(Name alias, Table<FileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> File(Table<O> child, ForeignKey<O, FileRecord> key) {
        super(child, key, FILE);
    }

    @Override
    public Schema getSchema() {
        return ClassfiyContact.CLASSFIY_CONTACT;
    }

    @Override
    public Identity<FileRecord, Integer> getIdentity() {
        return Keys.IDENTITY_FILE;
    }

    @Override
    public UniqueKey<FileRecord> getPrimaryKey() {
        return Keys.KEY_FILE_PRIMARY;
    }

    @Override
    public List<UniqueKey<FileRecord>> getKeys() {
        return Arrays.<UniqueKey<FileRecord>>asList(Keys.KEY_FILE_PRIMARY);
    }

    @Override
    public File as(String alias) {
        return new File(DSL.name(alias), this);
    }

    @Override
    public File as(Name alias) {
        return new File(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public File rename(String name) {
        return new File(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public File rename(Name name) {
        return new File(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, byte[], String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
