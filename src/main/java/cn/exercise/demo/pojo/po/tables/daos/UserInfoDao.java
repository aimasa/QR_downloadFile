/*
 * This file is generated by jOOQ.
*/
package cn.exercise.demo.pojo.po.tables.daos;


import cn.exercise.demo.pojo.po.tables.UserInfo;
import cn.exercise.demo.pojo.po.tables.records.UserInfoRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserInfoDao extends DAOImpl<UserInfoRecord, cn.exercise.demo.pojo.po.tables.pojos.UserInfo, Integer> {

    /**
     * Create a new UserInfoDao without any configuration
     */
    public UserInfoDao() {
        super(UserInfo.USER_INFO, cn.exercise.demo.pojo.po.tables.pojos.UserInfo.class);
    }

    /**
     * Create a new UserInfoDao with an attached configuration
     */
    public UserInfoDao(Configuration configuration) {
        super(UserInfo.USER_INFO, cn.exercise.demo.pojo.po.tables.pojos.UserInfo.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(cn.exercise.demo.pojo.po.tables.pojos.UserInfo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<cn.exercise.demo.pojo.po.tables.pojos.UserInfo> fetchById(Integer... values) {
        return fetch(UserInfo.USER_INFO.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public cn.exercise.demo.pojo.po.tables.pojos.UserInfo fetchOneById(Integer value) {
        return fetchOne(UserInfo.USER_INFO.ID, value);
    }

    /**
     * Fetch records that have <code>user_name IN (values)</code>
     */
    public List<cn.exercise.demo.pojo.po.tables.pojos.UserInfo> fetchByUserName(String... values) {
        return fetch(UserInfo.USER_INFO.USER_NAME, values);
    }

    /**
     * Fetch records that have <code>sex IN (values)</code>
     */
    public List<cn.exercise.demo.pojo.po.tables.pojos.UserInfo> fetchBySex(String... values) {
        return fetch(UserInfo.USER_INFO.SEX, values);
    }

    /**
     * Fetch records that have <code>age IN (values)</code>
     */
    public List<cn.exercise.demo.pojo.po.tables.pojos.UserInfo> fetchByAge(Integer... values) {
        return fetch(UserInfo.USER_INFO.AGE, values);
    }
}
